//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MVTools {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MVDB")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MVDB : global::System.Data.DataSet {
        
        private PREFDataTable tablePREF;
        
        private MVUSERDataTable tableMVUSER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MVDB() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MVDB(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PREF"] != null)) {
                    base.Tables.Add(new PREFDataTable(ds.Tables["PREF"]));
                }
                if ((ds.Tables["MVUSER"] != null)) {
                    base.Tables.Add(new MVUSERDataTable(ds.Tables["MVUSER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PREFDataTable PREF {
            get {
                return this.tablePREF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MVUSERDataTable MVUSER {
            get {
                return this.tableMVUSER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MVDB cln = ((MVDB)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PREF"] != null)) {
                    base.Tables.Add(new PREFDataTable(ds.Tables["PREF"]));
                }
                if ((ds.Tables["MVUSER"] != null)) {
                    base.Tables.Add(new MVUSERDataTable(ds.Tables["MVUSER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePREF = ((PREFDataTable)(base.Tables["PREF"]));
            if ((initTable == true)) {
                if ((this.tablePREF != null)) {
                    this.tablePREF.InitVars();
                }
            }
            this.tableMVUSER = ((MVUSERDataTable)(base.Tables["MVUSER"]));
            if ((initTable == true)) {
                if ((this.tableMVUSER != null)) {
                    this.tableMVUSER.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MVDB";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MVDB.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePREF = new PREFDataTable();
            base.Tables.Add(this.tablePREF);
            this.tableMVUSER = new MVUSERDataTable();
            base.Tables.Add(this.tableMVUSER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePREF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMVUSER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MVDB ds = new MVDB();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PREFRowChangeEventHandler(object sender, PREFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MVUSERRowChangeEventHandler(object sender, MVUSERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PREFDataTable : global::System.Data.TypedTableBase<PREFRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUSER;
            
            private global::System.Data.DataColumn columnDETAILS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFDataTable() {
                this.TableName = "PREF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PREFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PREFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DETAILSColumn {
                get {
                    return this.columnDETAILS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFRow this[int index] {
                get {
                    return ((PREFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PREFRowChangeEventHandler PREFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PREFRowChangeEventHandler PREFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PREFRowChangeEventHandler PREFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PREFRowChangeEventHandler PREFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPREFRow(PREFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFRow AddPREFRow(string ID, string USER, string DETAILS) {
                PREFRow rowPREFRow = ((PREFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        USER,
                        DETAILS};
                rowPREFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPREFRow);
                return rowPREFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PREFDataTable cln = ((PREFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PREFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUSER = base.Columns["USER"];
                this.columnDETAILS = base.Columns["DETAILS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUSER = new global::System.Data.DataColumn("USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
                this.columnDETAILS = new global::System.Data.DataColumn("DETAILS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDETAILS);
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 10;
                this.columnUSER.AllowDBNull = false;
                this.columnUSER.MaxLength = 8;
                this.columnDETAILS.AllowDBNull = false;
                this.columnDETAILS.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFRow NewPREFRow() {
                return ((PREFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PREFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PREFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PREFRowChanged != null)) {
                    this.PREFRowChanged(this, new PREFRowChangeEvent(((PREFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PREFRowChanging != null)) {
                    this.PREFRowChanging(this, new PREFRowChangeEvent(((PREFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PREFRowDeleted != null)) {
                    this.PREFRowDeleted(this, new PREFRowChangeEvent(((PREFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PREFRowDeleting != null)) {
                    this.PREFRowDeleting(this, new PREFRowChangeEvent(((PREFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePREFRow(PREFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MVDB ds = new MVDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PREFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MVUSERDataTable : global::System.Data.TypedTableBase<MVUSERRow> {
            
            private global::System.Data.DataColumn columnLOGGED;
            
            private global::System.Data.DataColumn columnLL_DATE;
            
            private global::System.Data.DataColumn columnLL_TIME;
            
            private global::System.Data.DataColumn columnINIT;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnLNAME;
            
            private global::System.Data.DataColumn columnFNAME;
            
            private global::System.Data.DataColumn columnACCESS;
            
            private global::System.Data.DataColumn columnSTREET;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnZIP;
            
            private global::System.Data.DataColumn columnPHONE;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnUIS;
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnFIS;
            
            private global::System.Data.DataColumn columnHIS;
            
            private global::System.Data.DataColumn columnREP;
            
            private global::System.Data.DataColumn columnLET;
            
            private global::System.Data.DataColumn columnSUU;
            
            private global::System.Data.DataColumn columnMF;
            
            private global::System.Data.DataColumn columnSIS;
            
            private global::System.Data.DataColumn columnSOS;
            
            private global::System.Data.DataColumn columnEXPERT;
            
            private global::System.Data.DataColumn columnPFS;
            
            private global::System.Data.DataColumn columnMACROS;
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnBARENTRY;
            
            private global::System.Data.DataColumn columnTUSERS;
            
            private global::System.Data.DataColumn columnINITIALS;
            
            private global::System.Data.DataColumn columnRADUSER;
            
            private global::System.Data.DataColumn columnTECHUSER;
            
            private global::System.Data.DataColumn columnACTIVE;
            
            private global::System.Data.DataColumn columnFNOTES;
            
            private global::System.Data.DataColumn columnQA;
            
            private global::System.Data.DataColumn columnREMOTE;
            
            private global::System.Data.DataColumn columnGROUP;
            
            private global::System.Data.DataColumn columnNIS;
            
            private global::System.Data.DataColumn columnSTYPE;
            
            private global::System.Data.DataColumn columnDOC;
            
            private global::System.Data.DataColumn columnAS;
            
            private global::System.Data.DataColumn columnMS;
            
            private global::System.Data.DataColumn columnDEFNOTE;
            
            private global::System.Data.DataColumn columnLAST_PWD;
            
            private global::System.Data.DataColumn columnFM;
            
            private global::System.Data.DataColumn columnPIN;
            
            private global::System.Data.DataColumn columnLAST_PIN;
            
            private global::System.Data.DataColumn columnASSIGNPIN;
            
            private global::System.Data.DataColumn columnCID;
            
            private global::System.Data.DataColumn columnEXPANDNOTE;
            
            private global::System.Data.DataColumn columnACTIVITY;
            
            private global::System.Data.DataColumn columnDEL;
            
            private global::System.Data.DataColumn columnRESIDENT;
            
            private global::System.Data.DataColumn columnMSR;
            
            private global::System.Data.DataColumn columnXREF;
            
            private global::System.Data.DataColumn columnAUDIT;
            
            private global::System.Data.DataColumn columnAUTOUSER;
            
            private global::System.Data.DataColumn columnQSELREP;
            
            private global::System.Data.DataColumn columnVR_USER;
            
            private global::System.Data.DataColumn columnMULTILOGIN;
            
            private global::System.Data.DataColumn columnXREFM;
            
            private global::System.Data.DataColumn columnORDER;
            
            private global::System.Data.DataColumn columnMACC;
            
            private global::System.Data.DataColumn columnDRR;
            
            private global::System.Data.DataColumn columnRPS;
            
            private global::System.Data.DataColumn columnRPROFILE;
            
            private global::System.Data.DataColumn columnDELS;
            
            private global::System.Data.DataColumn columnNPI;
            
            private global::System.Data.DataColumn columnVFC;
            
            private global::System.Data.DataColumn columnPSUSERID;
            
            private global::System.Data.DataColumn columnPSPASSWORD;
            
            private global::System.Data.DataColumn columnHUSERID;
            
            private global::System.Data.DataColumn columnHPASSWORD;
            
            private global::System.Data.DataColumn columnID2;
            
            private global::System.Data.DataColumn columnSA;
            
            private global::System.Data.DataColumn columnPNS;
            
            private global::System.Data.DataColumn columnMNM;
            
            private global::System.Data.DataColumn columnEMER_ONLY;
            
            private global::System.Data.DataColumn columnPATHRAD;
            
            private global::System.Data.DataColumn columnRADPEER_ID;
            
            private global::System.Data.DataColumn columnDELWL;
            
            private global::System.Data.DataColumn columnNAVUSER;
            
            private global::System.Data.DataColumn columnNAVPERM;
            
            private global::System.Data.DataColumn columnNAVASSIGN;
            
            private global::System.Data.DataColumn columnCME_GROUP;
            
            private global::System.Data.DataColumn columnCMERENEW;
            
            private global::System.Data.DataColumn columnINVLOGIN;
            
            private global::System.Data.DataColumn columnEHRSTAGE;
            
            private global::System.Data.DataColumn columnMFU;
            
            private global::System.Data.DataColumn columnHRIS;
            
            private global::System.Data.DataColumn columnP_FILEMENU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERDataTable() {
                this.TableName = "MVUSER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MVUSERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MVUSERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGGEDColumn {
                get {
                    return this.columnLOGGED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LL_DATEColumn {
                get {
                    return this.columnLL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LL_TIMEColumn {
                get {
                    return this.columnLL_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INITColumn {
                get {
                    return this.columnINIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LNAMEColumn {
                get {
                    return this.columnLNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FNAMEColumn {
                get {
                    return this.columnFNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCESSColumn {
                get {
                    return this.columnACCESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STREETColumn {
                get {
                    return this.columnSTREET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PHONEColumn {
                get {
                    return this.columnPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UISColumn {
                get {
                    return this.columnUIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FISColumn {
                get {
                    return this.columnFIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HISColumn {
                get {
                    return this.columnHIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REPColumn {
                get {
                    return this.columnREP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LETColumn {
                get {
                    return this.columnLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SUUColumn {
                get {
                    return this.columnSUU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MFColumn {
                get {
                    return this.columnMF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SISColumn {
                get {
                    return this.columnSIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOSColumn {
                get {
                    return this.columnSOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPERTColumn {
                get {
                    return this.columnEXPERT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PFSColumn {
                get {
                    return this.columnPFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACROSColumn {
                get {
                    return this.columnMACROS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BARENTRYColumn {
                get {
                    return this.columnBARENTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TUSERSColumn {
                get {
                    return this.columnTUSERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INITIALSColumn {
                get {
                    return this.columnINITIALS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RADUSERColumn {
                get {
                    return this.columnRADUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TECHUSERColumn {
                get {
                    return this.columnTECHUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIVEColumn {
                get {
                    return this.columnACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FNOTESColumn {
                get {
                    return this.columnFNOTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QAColumn {
                get {
                    return this.columnQA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMOTEColumn {
                get {
                    return this.columnREMOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUPColumn {
                get {
                    return this.columnGROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NISColumn {
                get {
                    return this.columnNIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STYPEColumn {
                get {
                    return this.columnSTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOCColumn {
                get {
                    return this.columnDOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASColumn {
                get {
                    return this.columnAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MSColumn {
                get {
                    return this.columnMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFNOTEColumn {
                get {
                    return this.columnDEFNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_PWDColumn {
                get {
                    return this.columnLAST_PWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMColumn {
                get {
                    return this.columnFM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PINColumn {
                get {
                    return this.columnPIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_PINColumn {
                get {
                    return this.columnLAST_PIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSIGNPINColumn {
                get {
                    return this.columnASSIGNPIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CIDColumn {
                get {
                    return this.columnCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPANDNOTEColumn {
                get {
                    return this.columnEXPANDNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIVITYColumn {
                get {
                    return this.columnACTIVITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DELColumn {
                get {
                    return this.columnDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RESIDENTColumn {
                get {
                    return this.columnRESIDENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MSRColumn {
                get {
                    return this.columnMSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XREFColumn {
                get {
                    return this.columnXREF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUDITColumn {
                get {
                    return this.columnAUDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOUSERColumn {
                get {
                    return this.columnAUTOUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QSELREPColumn {
                get {
                    return this.columnQSELREP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VR_USERColumn {
                get {
                    return this.columnVR_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MULTILOGINColumn {
                get {
                    return this.columnMULTILOGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XREFMColumn {
                get {
                    return this.columnXREFM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDERColumn {
                get {
                    return this.columnORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACCColumn {
                get {
                    return this.columnMACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRRColumn {
                get {
                    return this.columnDRR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPSColumn {
                get {
                    return this.columnRPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPROFILEColumn {
                get {
                    return this.columnRPROFILE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DELSColumn {
                get {
                    return this.columnDELS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NPIColumn {
                get {
                    return this.columnNPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VFCColumn {
                get {
                    return this.columnVFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSUSERIDColumn {
                get {
                    return this.columnPSUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSPASSWORDColumn {
                get {
                    return this.columnPSPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUSERIDColumn {
                get {
                    return this.columnHUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HPASSWORDColumn {
                get {
                    return this.columnHPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID2Column {
                get {
                    return this.columnID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAColumn {
                get {
                    return this.columnSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNSColumn {
                get {
                    return this.columnPNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MNMColumn {
                get {
                    return this.columnMNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMER_ONLYColumn {
                get {
                    return this.columnEMER_ONLY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PATHRADColumn {
                get {
                    return this.columnPATHRAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RADPEER_IDColumn {
                get {
                    return this.columnRADPEER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DELWLColumn {
                get {
                    return this.columnDELWL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAVUSERColumn {
                get {
                    return this.columnNAVUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAVPERMColumn {
                get {
                    return this.columnNAVPERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAVASSIGNColumn {
                get {
                    return this.columnNAVASSIGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CME_GROUPColumn {
                get {
                    return this.columnCME_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMERENEWColumn {
                get {
                    return this.columnCMERENEW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVLOGINColumn {
                get {
                    return this.columnINVLOGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EHRSTAGEColumn {
                get {
                    return this.columnEHRSTAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MFUColumn {
                get {
                    return this.columnMFU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HRISColumn {
                get {
                    return this.columnHRIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P_FILEMENUColumn {
                get {
                    return this.columnP_FILEMENU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERRow this[int index] {
                get {
                    return ((MVUSERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MVUSERRowChangeEventHandler MVUSERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MVUSERRowChangeEventHandler MVUSERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MVUSERRowChangeEventHandler MVUSERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MVUSERRowChangeEventHandler MVUSERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMVUSERRow(MVUSERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERRow AddMVUSERRow(
                        bool LOGGED, 
                        System.DateTime LL_DATE, 
                        string LL_TIME, 
                        string INIT, 
                        string CODE, 
                        string LNAME, 
                        string FNAME, 
                        string ACCESS, 
                        string STREET, 
                        string CITY, 
                        string ZIP, 
                        string PHONE, 
                        string STATE, 
                        bool UIS, 
                        bool PIS, 
                        bool FIS, 
                        bool HIS, 
                        bool REP, 
                        bool LET, 
                        bool SUU, 
                        bool MF, 
                        bool SIS, 
                        bool SOS, 
                        bool EXPERT, 
                        bool PFS, 
                        string MACROS, 
                        string KEY, 
                        string SSN, 
                        bool BARENTRY, 
                        string TUSERS, 
                        string INITIALS, 
                        bool RADUSER, 
                        bool TECHUSER, 
                        bool ACTIVE, 
                        string FNOTES, 
                        bool QA, 
                        bool REMOTE, 
                        string GROUP, 
                        bool NIS, 
                        string STYPE, 
                        string DOC, 
                        bool AS, 
                        bool MS, 
                        string DEFNOTE, 
                        System.DateTime LAST_PWD, 
                        bool FM, 
                        string PIN, 
                        System.DateTime LAST_PIN, 
                        bool ASSIGNPIN, 
                        bool CID, 
                        bool EXPANDNOTE, 
                        System.DateTime ACTIVITY, 
                        bool DEL, 
                        bool RESIDENT, 
                        bool MSR, 
                        string XREF, 
                        bool AUDIT, 
                        string AUTOUSER, 
                        bool QSELREP, 
                        string VR_USER, 
                        bool MULTILOGIN, 
                        string XREFM, 
                        int ORDER, 
                        bool MACC, 
                        bool DRR, 
                        bool RPS, 
                        string RPROFILE, 
                        bool DELS, 
                        string NPI, 
                        bool VFC, 
                        string PSUSERID, 
                        string PSPASSWORD, 
                        string HUSERID, 
                        string HPASSWORD, 
                        string ID2, 
                        bool SA, 
                        bool PNS, 
                        bool MNM, 
                        bool EMER_ONLY, 
                        bool PATHRAD, 
                        string RADPEER_ID, 
                        bool DELWL, 
                        bool NAVUSER, 
                        string NAVPERM, 
                        bool NAVASSIGN, 
                        string CME_GROUP, 
                        System.DateTime CMERENEW, 
                        bool INVLOGIN, 
                        string EHRSTAGE, 
                        bool MFU, 
                        bool HRIS, 
                        bool P_FILEMENU) {
                MVUSERRow rowMVUSERRow = ((MVUSERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGGED,
                        LL_DATE,
                        LL_TIME,
                        INIT,
                        CODE,
                        LNAME,
                        FNAME,
                        ACCESS,
                        STREET,
                        CITY,
                        ZIP,
                        PHONE,
                        STATE,
                        UIS,
                        PIS,
                        FIS,
                        HIS,
                        REP,
                        LET,
                        SUU,
                        MF,
                        SIS,
                        SOS,
                        EXPERT,
                        PFS,
                        MACROS,
                        KEY,
                        SSN,
                        BARENTRY,
                        TUSERS,
                        INITIALS,
                        RADUSER,
                        TECHUSER,
                        ACTIVE,
                        FNOTES,
                        QA,
                        REMOTE,
                        GROUP,
                        NIS,
                        STYPE,
                        DOC,
                        AS,
                        MS,
                        DEFNOTE,
                        LAST_PWD,
                        FM,
                        PIN,
                        LAST_PIN,
                        ASSIGNPIN,
                        CID,
                        EXPANDNOTE,
                        ACTIVITY,
                        DEL,
                        RESIDENT,
                        MSR,
                        XREF,
                        AUDIT,
                        AUTOUSER,
                        QSELREP,
                        VR_USER,
                        MULTILOGIN,
                        XREFM,
                        ORDER,
                        MACC,
                        DRR,
                        RPS,
                        RPROFILE,
                        DELS,
                        NPI,
                        VFC,
                        PSUSERID,
                        PSPASSWORD,
                        HUSERID,
                        HPASSWORD,
                        ID2,
                        SA,
                        PNS,
                        MNM,
                        EMER_ONLY,
                        PATHRAD,
                        RADPEER_ID,
                        DELWL,
                        NAVUSER,
                        NAVPERM,
                        NAVASSIGN,
                        CME_GROUP,
                        CMERENEW,
                        INVLOGIN,
                        EHRSTAGE,
                        MFU,
                        HRIS,
                        P_FILEMENU};
                rowMVUSERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMVUSERRow);
                return rowMVUSERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MVUSERDataTable cln = ((MVUSERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MVUSERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOGGED = base.Columns["LOGGED"];
                this.columnLL_DATE = base.Columns["LL_DATE"];
                this.columnLL_TIME = base.Columns["LL_TIME"];
                this.columnINIT = base.Columns["INIT"];
                this.columnCODE = base.Columns["CODE"];
                this.columnLNAME = base.Columns["LNAME"];
                this.columnFNAME = base.Columns["FNAME"];
                this.columnACCESS = base.Columns["ACCESS"];
                this.columnSTREET = base.Columns["STREET"];
                this.columnCITY = base.Columns["CITY"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnPHONE = base.Columns["PHONE"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnUIS = base.Columns["UIS"];
                this.columnPIS = base.Columns["PIS"];
                this.columnFIS = base.Columns["FIS"];
                this.columnHIS = base.Columns["HIS"];
                this.columnREP = base.Columns["REP"];
                this.columnLET = base.Columns["LET"];
                this.columnSUU = base.Columns["SUU"];
                this.columnMF = base.Columns["MF"];
                this.columnSIS = base.Columns["SIS"];
                this.columnSOS = base.Columns["SOS"];
                this.columnEXPERT = base.Columns["EXPERT"];
                this.columnPFS = base.Columns["PFS"];
                this.columnMACROS = base.Columns["MACROS"];
                this.columnKEY = base.Columns["KEY"];
                this.columnSSN = base.Columns["SSN"];
                this.columnBARENTRY = base.Columns["BARENTRY"];
                this.columnTUSERS = base.Columns["TUSERS"];
                this.columnINITIALS = base.Columns["INITIALS"];
                this.columnRADUSER = base.Columns["RADUSER"];
                this.columnTECHUSER = base.Columns["TECHUSER"];
                this.columnACTIVE = base.Columns["ACTIVE"];
                this.columnFNOTES = base.Columns["FNOTES"];
                this.columnQA = base.Columns["QA"];
                this.columnREMOTE = base.Columns["REMOTE"];
                this.columnGROUP = base.Columns["GROUP"];
                this.columnNIS = base.Columns["NIS"];
                this.columnSTYPE = base.Columns["STYPE"];
                this.columnDOC = base.Columns["DOC"];
                this.columnAS = base.Columns["AS"];
                this.columnMS = base.Columns["MS"];
                this.columnDEFNOTE = base.Columns["DEFNOTE"];
                this.columnLAST_PWD = base.Columns["LAST_PWD"];
                this.columnFM = base.Columns["FM"];
                this.columnPIN = base.Columns["PIN"];
                this.columnLAST_PIN = base.Columns["LAST_PIN"];
                this.columnASSIGNPIN = base.Columns["ASSIGNPIN"];
                this.columnCID = base.Columns["CID"];
                this.columnEXPANDNOTE = base.Columns["EXPANDNOTE"];
                this.columnACTIVITY = base.Columns["ACTIVITY"];
                this.columnDEL = base.Columns["DEL"];
                this.columnRESIDENT = base.Columns["RESIDENT"];
                this.columnMSR = base.Columns["MSR"];
                this.columnXREF = base.Columns["XREF"];
                this.columnAUDIT = base.Columns["AUDIT"];
                this.columnAUTOUSER = base.Columns["AUTOUSER"];
                this.columnQSELREP = base.Columns["QSELREP"];
                this.columnVR_USER = base.Columns["VR_USER"];
                this.columnMULTILOGIN = base.Columns["MULTILOGIN"];
                this.columnXREFM = base.Columns["XREFM"];
                this.columnORDER = base.Columns["ORDER"];
                this.columnMACC = base.Columns["MACC"];
                this.columnDRR = base.Columns["DRR"];
                this.columnRPS = base.Columns["RPS"];
                this.columnRPROFILE = base.Columns["RPROFILE"];
                this.columnDELS = base.Columns["DELS"];
                this.columnNPI = base.Columns["NPI"];
                this.columnVFC = base.Columns["VFC"];
                this.columnPSUSERID = base.Columns["PSUSERID"];
                this.columnPSPASSWORD = base.Columns["PSPASSWORD"];
                this.columnHUSERID = base.Columns["HUSERID"];
                this.columnHPASSWORD = base.Columns["HPASSWORD"];
                this.columnID2 = base.Columns["ID2"];
                this.columnSA = base.Columns["SA"];
                this.columnPNS = base.Columns["PNS"];
                this.columnMNM = base.Columns["MNM"];
                this.columnEMER_ONLY = base.Columns["EMER_ONLY"];
                this.columnPATHRAD = base.Columns["PATHRAD"];
                this.columnRADPEER_ID = base.Columns["RADPEER_ID"];
                this.columnDELWL = base.Columns["DELWL"];
                this.columnNAVUSER = base.Columns["NAVUSER"];
                this.columnNAVPERM = base.Columns["NAVPERM"];
                this.columnNAVASSIGN = base.Columns["NAVASSIGN"];
                this.columnCME_GROUP = base.Columns["CME_GROUP"];
                this.columnCMERENEW = base.Columns["CMERENEW"];
                this.columnINVLOGIN = base.Columns["INVLOGIN"];
                this.columnEHRSTAGE = base.Columns["EHRSTAGE"];
                this.columnMFU = base.Columns["MFU"];
                this.columnHRIS = base.Columns["HRIS"];
                this.columnP_FILEMENU = base.Columns["P_FILEMENU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOGGED = new global::System.Data.DataColumn("LOGGED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGGED);
                this.columnLL_DATE = new global::System.Data.DataColumn("LL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLL_DATE);
                this.columnLL_TIME = new global::System.Data.DataColumn("LL_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLL_TIME);
                this.columnINIT = new global::System.Data.DataColumn("INIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINIT);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnLNAME = new global::System.Data.DataColumn("LNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLNAME);
                this.columnFNAME = new global::System.Data.DataColumn("FNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNAME);
                this.columnACCESS = new global::System.Data.DataColumn("ACCESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESS);
                this.columnSTREET = new global::System.Data.DataColumn("STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREET);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnZIP = new global::System.Data.DataColumn("ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnPHONE = new global::System.Data.DataColumn("PHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnUIS = new global::System.Data.DataColumn("UIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUIS);
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnFIS = new global::System.Data.DataColumn("FIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIS);
                this.columnHIS = new global::System.Data.DataColumn("HIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIS);
                this.columnREP = new global::System.Data.DataColumn("REP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP);
                this.columnLET = new global::System.Data.DataColumn("LET", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLET);
                this.columnSUU = new global::System.Data.DataColumn("SUU", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUU);
                this.columnMF = new global::System.Data.DataColumn("MF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMF);
                this.columnSIS = new global::System.Data.DataColumn("SIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIS);
                this.columnSOS = new global::System.Data.DataColumn("SOS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOS);
                this.columnEXPERT = new global::System.Data.DataColumn("EXPERT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPERT);
                this.columnPFS = new global::System.Data.DataColumn("PFS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFS);
                this.columnMACROS = new global::System.Data.DataColumn("MACROS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACROS);
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnBARENTRY = new global::System.Data.DataColumn("BARENTRY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARENTRY);
                this.columnTUSERS = new global::System.Data.DataColumn("TUSERS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUSERS);
                this.columnINITIALS = new global::System.Data.DataColumn("INITIALS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITIALS);
                this.columnRADUSER = new global::System.Data.DataColumn("RADUSER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRADUSER);
                this.columnTECHUSER = new global::System.Data.DataColumn("TECHUSER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTECHUSER);
                this.columnACTIVE = new global::System.Data.DataColumn("ACTIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE);
                this.columnFNOTES = new global::System.Data.DataColumn("FNOTES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNOTES);
                this.columnQA = new global::System.Data.DataColumn("QA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQA);
                this.columnREMOTE = new global::System.Data.DataColumn("REMOTE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMOTE);
                this.columnGROUP = new global::System.Data.DataColumn("GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP);
                this.columnNIS = new global::System.Data.DataColumn("NIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIS);
                this.columnSTYPE = new global::System.Data.DataColumn("STYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTYPE);
                this.columnDOC = new global::System.Data.DataColumn("DOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC);
                this.columnAS = new global::System.Data.DataColumn("AS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAS);
                this.columnMS = new global::System.Data.DataColumn("MS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMS);
                this.columnDEFNOTE = new global::System.Data.DataColumn("DEFNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFNOTE);
                this.columnLAST_PWD = new global::System.Data.DataColumn("LAST_PWD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_PWD);
                this.columnFM = new global::System.Data.DataColumn("FM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFM);
                this.columnPIN = new global::System.Data.DataColumn("PIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIN);
                this.columnLAST_PIN = new global::System.Data.DataColumn("LAST_PIN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_PIN);
                this.columnASSIGNPIN = new global::System.Data.DataColumn("ASSIGNPIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGNPIN);
                this.columnCID = new global::System.Data.DataColumn("CID", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCID);
                this.columnEXPANDNOTE = new global::System.Data.DataColumn("EXPANDNOTE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPANDNOTE);
                this.columnACTIVITY = new global::System.Data.DataColumn("ACTIVITY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVITY);
                this.columnDEL = new global::System.Data.DataColumn("DEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL);
                this.columnRESIDENT = new global::System.Data.DataColumn("RESIDENT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESIDENT);
                this.columnMSR = new global::System.Data.DataColumn("MSR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSR);
                this.columnXREF = new global::System.Data.DataColumn("XREF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXREF);
                this.columnAUDIT = new global::System.Data.DataColumn("AUDIT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUDIT);
                this.columnAUTOUSER = new global::System.Data.DataColumn("AUTOUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOUSER);
                this.columnQSELREP = new global::System.Data.DataColumn("QSELREP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQSELREP);
                this.columnVR_USER = new global::System.Data.DataColumn("VR_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVR_USER);
                this.columnMULTILOGIN = new global::System.Data.DataColumn("MULTILOGIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMULTILOGIN);
                this.columnXREFM = new global::System.Data.DataColumn("XREFM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXREFM);
                this.columnORDER = new global::System.Data.DataColumn("ORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER);
                this.columnMACC = new global::System.Data.DataColumn("MACC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACC);
                this.columnDRR = new global::System.Data.DataColumn("DRR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRR);
                this.columnRPS = new global::System.Data.DataColumn("RPS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPS);
                this.columnRPROFILE = new global::System.Data.DataColumn("RPROFILE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPROFILE);
                this.columnDELS = new global::System.Data.DataColumn("DELS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELS);
                this.columnNPI = new global::System.Data.DataColumn("NPI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPI);
                this.columnVFC = new global::System.Data.DataColumn("VFC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFC);
                this.columnPSUSERID = new global::System.Data.DataColumn("PSUSERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSUSERID);
                this.columnPSPASSWORD = new global::System.Data.DataColumn("PSPASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSPASSWORD);
                this.columnHUSERID = new global::System.Data.DataColumn("HUSERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUSERID);
                this.columnHPASSWORD = new global::System.Data.DataColumn("HPASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHPASSWORD);
                this.columnID2 = new global::System.Data.DataColumn("ID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID2);
                this.columnSA = new global::System.Data.DataColumn("SA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA);
                this.columnPNS = new global::System.Data.DataColumn("PNS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNS);
                this.columnMNM = new global::System.Data.DataColumn("MNM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNM);
                this.columnEMER_ONLY = new global::System.Data.DataColumn("EMER_ONLY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_ONLY);
                this.columnPATHRAD = new global::System.Data.DataColumn("PATHRAD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATHRAD);
                this.columnRADPEER_ID = new global::System.Data.DataColumn("RADPEER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRADPEER_ID);
                this.columnDELWL = new global::System.Data.DataColumn("DELWL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELWL);
                this.columnNAVUSER = new global::System.Data.DataColumn("NAVUSER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAVUSER);
                this.columnNAVPERM = new global::System.Data.DataColumn("NAVPERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAVPERM);
                this.columnNAVASSIGN = new global::System.Data.DataColumn("NAVASSIGN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAVASSIGN);
                this.columnCME_GROUP = new global::System.Data.DataColumn("CME_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCME_GROUP);
                this.columnCMERENEW = new global::System.Data.DataColumn("CMERENEW", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMERENEW);
                this.columnINVLOGIN = new global::System.Data.DataColumn("INVLOGIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVLOGIN);
                this.columnEHRSTAGE = new global::System.Data.DataColumn("EHRSTAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEHRSTAGE);
                this.columnMFU = new global::System.Data.DataColumn("MFU", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMFU);
                this.columnHRIS = new global::System.Data.DataColumn("HRIS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRIS);
                this.columnP_FILEMENU = new global::System.Data.DataColumn("P_FILEMENU", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_FILEMENU);
                this.columnLOGGED.AllowDBNull = false;
                this.columnLL_DATE.AllowDBNull = false;
                this.columnLL_TIME.AllowDBNull = false;
                this.columnLL_TIME.MaxLength = 8;
                this.columnINIT.AllowDBNull = false;
                this.columnINIT.MaxLength = 8;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 8;
                this.columnLNAME.AllowDBNull = false;
                this.columnLNAME.MaxLength = 35;
                this.columnFNAME.AllowDBNull = false;
                this.columnFNAME.MaxLength = 20;
                this.columnACCESS.AllowDBNull = false;
                this.columnACCESS.MaxLength = 15;
                this.columnSTREET.AllowDBNull = false;
                this.columnSTREET.MaxLength = 30;
                this.columnCITY.AllowDBNull = false;
                this.columnCITY.MaxLength = 20;
                this.columnZIP.AllowDBNull = false;
                this.columnZIP.MaxLength = 9;
                this.columnPHONE.AllowDBNull = false;
                this.columnPHONE.MaxLength = 10;
                this.columnSTATE.AllowDBNull = false;
                this.columnSTATE.MaxLength = 2;
                this.columnUIS.AllowDBNull = false;
                this.columnPIS.AllowDBNull = false;
                this.columnFIS.AllowDBNull = false;
                this.columnHIS.AllowDBNull = false;
                this.columnREP.AllowDBNull = false;
                this.columnLET.AllowDBNull = false;
                this.columnSUU.AllowDBNull = false;
                this.columnMF.AllowDBNull = false;
                this.columnSIS.AllowDBNull = false;
                this.columnSOS.AllowDBNull = false;
                this.columnEXPERT.AllowDBNull = false;
                this.columnPFS.AllowDBNull = false;
                this.columnMACROS.AllowDBNull = false;
                this.columnMACROS.MaxLength = 2147483647;
                this.columnKEY.AllowDBNull = false;
                this.columnKEY.MaxLength = 8;
                this.columnSSN.AllowDBNull = false;
                this.columnSSN.MaxLength = 9;
                this.columnBARENTRY.AllowDBNull = false;
                this.columnTUSERS.AllowDBNull = false;
                this.columnTUSERS.MaxLength = 2147483647;
                this.columnINITIALS.AllowDBNull = false;
                this.columnINITIALS.MaxLength = 4;
                this.columnRADUSER.AllowDBNull = false;
                this.columnTECHUSER.AllowDBNull = false;
                this.columnACTIVE.AllowDBNull = false;
                this.columnFNOTES.AllowDBNull = false;
                this.columnFNOTES.MaxLength = 2147483647;
                this.columnQA.AllowDBNull = false;
                this.columnREMOTE.AllowDBNull = false;
                this.columnGROUP.AllowDBNull = false;
                this.columnGROUP.MaxLength = 30;
                this.columnNIS.AllowDBNull = false;
                this.columnSTYPE.AllowDBNull = false;
                this.columnSTYPE.MaxLength = 2147483647;
                this.columnDOC.AllowDBNull = false;
                this.columnDOC.MaxLength = 10;
                this.columnAS.AllowDBNull = false;
                this.columnMS.AllowDBNull = false;
                this.columnDEFNOTE.AllowDBNull = false;
                this.columnDEFNOTE.MaxLength = 30;
                this.columnLAST_PWD.AllowDBNull = false;
                this.columnFM.AllowDBNull = false;
                this.columnPIN.AllowDBNull = false;
                this.columnPIN.MaxLength = 10;
                this.columnLAST_PIN.AllowDBNull = false;
                this.columnASSIGNPIN.AllowDBNull = false;
                this.columnCID.AllowDBNull = false;
                this.columnEXPANDNOTE.AllowDBNull = false;
                this.columnACTIVITY.AllowDBNull = false;
                this.columnDEL.AllowDBNull = false;
                this.columnRESIDENT.AllowDBNull = false;
                this.columnMSR.AllowDBNull = false;
                this.columnXREF.AllowDBNull = false;
                this.columnXREF.MaxLength = 20;
                this.columnAUDIT.AllowDBNull = false;
                this.columnAUTOUSER.AllowDBNull = false;
                this.columnAUTOUSER.MaxLength = 40;
                this.columnQSELREP.AllowDBNull = false;
                this.columnVR_USER.AllowDBNull = false;
                this.columnVR_USER.MaxLength = 30;
                this.columnMULTILOGIN.AllowDBNull = false;
                this.columnXREFM.AllowDBNull = false;
                this.columnXREFM.MaxLength = 2147483647;
                this.columnORDER.AllowDBNull = false;
                this.columnMACC.AllowDBNull = false;
                this.columnDRR.AllowDBNull = false;
                this.columnRPS.AllowDBNull = false;
                this.columnRPROFILE.AllowDBNull = false;
                this.columnRPROFILE.MaxLength = 2147483647;
                this.columnDELS.AllowDBNull = false;
                this.columnNPI.AllowDBNull = false;
                this.columnNPI.MaxLength = 10;
                this.columnVFC.AllowDBNull = false;
                this.columnPSUSERID.AllowDBNull = false;
                this.columnPSUSERID.MaxLength = 20;
                this.columnPSPASSWORD.AllowDBNull = false;
                this.columnPSPASSWORD.MaxLength = 20;
                this.columnHUSERID.AllowDBNull = false;
                this.columnHUSERID.MaxLength = 20;
                this.columnHPASSWORD.AllowDBNull = false;
                this.columnHPASSWORD.MaxLength = 20;
                this.columnID2.AllowDBNull = false;
                this.columnID2.MaxLength = 20;
                this.columnSA.AllowDBNull = false;
                this.columnPNS.AllowDBNull = false;
                this.columnMNM.AllowDBNull = false;
                this.columnEMER_ONLY.AllowDBNull = false;
                this.columnPATHRAD.AllowDBNull = false;
                this.columnRADPEER_ID.AllowDBNull = false;
                this.columnRADPEER_ID.MaxLength = 24;
                this.columnDELWL.AllowDBNull = false;
                this.columnNAVUSER.AllowDBNull = false;
                this.columnNAVPERM.AllowDBNull = false;
                this.columnNAVPERM.MaxLength = 2147483647;
                this.columnNAVASSIGN.AllowDBNull = false;
                this.columnCME_GROUP.AllowDBNull = false;
                this.columnCME_GROUP.MaxLength = 10;
                this.columnCMERENEW.AllowDBNull = false;
                this.columnINVLOGIN.AllowDBNull = false;
                this.columnEHRSTAGE.AllowDBNull = false;
                this.columnEHRSTAGE.MaxLength = 2;
                this.columnMFU.AllowDBNull = false;
                this.columnHRIS.AllowDBNull = false;
                this.columnP_FILEMENU.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERRow NewMVUSERRow() {
                return ((MVUSERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MVUSERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MVUSERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MVUSERRowChanged != null)) {
                    this.MVUSERRowChanged(this, new MVUSERRowChangeEvent(((MVUSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MVUSERRowChanging != null)) {
                    this.MVUSERRowChanging(this, new MVUSERRowChangeEvent(((MVUSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MVUSERRowDeleted != null)) {
                    this.MVUSERRowDeleted(this, new MVUSERRowChangeEvent(((MVUSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MVUSERRowDeleting != null)) {
                    this.MVUSERRowDeleting(this, new MVUSERRowChangeEvent(((MVUSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMVUSERRow(MVUSERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MVDB ds = new MVDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MVUSERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PREFRow : global::System.Data.DataRow {
            
            private PREFDataTable tablePREF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PREFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePREF = ((PREFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tablePREF.IDColumn]));
                }
                set {
                    this[this.tablePREF.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USER {
                get {
                    return ((string)(this[this.tablePREF.USERColumn]));
                }
                set {
                    this[this.tablePREF.USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DETAILS {
                get {
                    return ((string)(this[this.tablePREF.DETAILSColumn]));
                }
                set {
                    this[this.tablePREF.DETAILSColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MVUSERRow : global::System.Data.DataRow {
            
            private MVUSERDataTable tableMVUSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MVUSERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMVUSER = ((MVUSERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LOGGED {
                get {
                    return ((bool)(this[this.tableMVUSER.LOGGEDColumn]));
                }
                set {
                    this[this.tableMVUSER.LOGGEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LL_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableMVUSER.LL_DATEColumn]));
                }
                set {
                    this[this.tableMVUSER.LL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LL_TIME {
                get {
                    return ((string)(this[this.tableMVUSER.LL_TIMEColumn]));
                }
                set {
                    this[this.tableMVUSER.LL_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INIT {
                get {
                    return ((string)(this[this.tableMVUSER.INITColumn]));
                }
                set {
                    this[this.tableMVUSER.INITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableMVUSER.CODEColumn]));
                }
                set {
                    this[this.tableMVUSER.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LNAME {
                get {
                    return ((string)(this[this.tableMVUSER.LNAMEColumn]));
                }
                set {
                    this[this.tableMVUSER.LNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FNAME {
                get {
                    return ((string)(this[this.tableMVUSER.FNAMEColumn]));
                }
                set {
                    this[this.tableMVUSER.FNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCESS {
                get {
                    return ((string)(this[this.tableMVUSER.ACCESSColumn]));
                }
                set {
                    this[this.tableMVUSER.ACCESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STREET {
                get {
                    return ((string)(this[this.tableMVUSER.STREETColumn]));
                }
                set {
                    this[this.tableMVUSER.STREETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CITY {
                get {
                    return ((string)(this[this.tableMVUSER.CITYColumn]));
                }
                set {
                    this[this.tableMVUSER.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZIP {
                get {
                    return ((string)(this[this.tableMVUSER.ZIPColumn]));
                }
                set {
                    this[this.tableMVUSER.ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PHONE {
                get {
                    return ((string)(this[this.tableMVUSER.PHONEColumn]));
                }
                set {
                    this[this.tableMVUSER.PHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATE {
                get {
                    return ((string)(this[this.tableMVUSER.STATEColumn]));
                }
                set {
                    this[this.tableMVUSER.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UIS {
                get {
                    return ((bool)(this[this.tableMVUSER.UISColumn]));
                }
                set {
                    this[this.tableMVUSER.UISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PIS {
                get {
                    return ((bool)(this[this.tableMVUSER.PISColumn]));
                }
                set {
                    this[this.tableMVUSER.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FIS {
                get {
                    return ((bool)(this[this.tableMVUSER.FISColumn]));
                }
                set {
                    this[this.tableMVUSER.FISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HIS {
                get {
                    return ((bool)(this[this.tableMVUSER.HISColumn]));
                }
                set {
                    this[this.tableMVUSER.HISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool REP {
                get {
                    return ((bool)(this[this.tableMVUSER.REPColumn]));
                }
                set {
                    this[this.tableMVUSER.REPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LET {
                get {
                    return ((bool)(this[this.tableMVUSER.LETColumn]));
                }
                set {
                    this[this.tableMVUSER.LETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SUU {
                get {
                    return ((bool)(this[this.tableMVUSER.SUUColumn]));
                }
                set {
                    this[this.tableMVUSER.SUUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MF {
                get {
                    return ((bool)(this[this.tableMVUSER.MFColumn]));
                }
                set {
                    this[this.tableMVUSER.MFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SIS {
                get {
                    return ((bool)(this[this.tableMVUSER.SISColumn]));
                }
                set {
                    this[this.tableMVUSER.SISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SOS {
                get {
                    return ((bool)(this[this.tableMVUSER.SOSColumn]));
                }
                set {
                    this[this.tableMVUSER.SOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EXPERT {
                get {
                    return ((bool)(this[this.tableMVUSER.EXPERTColumn]));
                }
                set {
                    this[this.tableMVUSER.EXPERTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PFS {
                get {
                    return ((bool)(this[this.tableMVUSER.PFSColumn]));
                }
                set {
                    this[this.tableMVUSER.PFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MACROS {
                get {
                    return ((string)(this[this.tableMVUSER.MACROSColumn]));
                }
                set {
                    this[this.tableMVUSER.MACROSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY {
                get {
                    return ((string)(this[this.tableMVUSER.KEYColumn]));
                }
                set {
                    this[this.tableMVUSER.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSN {
                get {
                    return ((string)(this[this.tableMVUSER.SSNColumn]));
                }
                set {
                    this[this.tableMVUSER.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BARENTRY {
                get {
                    return ((bool)(this[this.tableMVUSER.BARENTRYColumn]));
                }
                set {
                    this[this.tableMVUSER.BARENTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TUSERS {
                get {
                    return ((string)(this[this.tableMVUSER.TUSERSColumn]));
                }
                set {
                    this[this.tableMVUSER.TUSERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INITIALS {
                get {
                    return ((string)(this[this.tableMVUSER.INITIALSColumn]));
                }
                set {
                    this[this.tableMVUSER.INITIALSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RADUSER {
                get {
                    return ((bool)(this[this.tableMVUSER.RADUSERColumn]));
                }
                set {
                    this[this.tableMVUSER.RADUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TECHUSER {
                get {
                    return ((bool)(this[this.tableMVUSER.TECHUSERColumn]));
                }
                set {
                    this[this.tableMVUSER.TECHUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ACTIVE {
                get {
                    return ((bool)(this[this.tableMVUSER.ACTIVEColumn]));
                }
                set {
                    this[this.tableMVUSER.ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FNOTES {
                get {
                    return ((string)(this[this.tableMVUSER.FNOTESColumn]));
                }
                set {
                    this[this.tableMVUSER.FNOTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool QA {
                get {
                    return ((bool)(this[this.tableMVUSER.QAColumn]));
                }
                set {
                    this[this.tableMVUSER.QAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool REMOTE {
                get {
                    return ((bool)(this[this.tableMVUSER.REMOTEColumn]));
                }
                set {
                    this[this.tableMVUSER.REMOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP {
                get {
                    return ((string)(this[this.tableMVUSER.GROUPColumn]));
                }
                set {
                    this[this.tableMVUSER.GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NIS {
                get {
                    return ((bool)(this[this.tableMVUSER.NISColumn]));
                }
                set {
                    this[this.tableMVUSER.NISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STYPE {
                get {
                    return ((string)(this[this.tableMVUSER.STYPEColumn]));
                }
                set {
                    this[this.tableMVUSER.STYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOC {
                get {
                    return ((string)(this[this.tableMVUSER.DOCColumn]));
                }
                set {
                    this[this.tableMVUSER.DOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AS {
                get {
                    return ((bool)(this[this.tableMVUSER.ASColumn]));
                }
                set {
                    this[this.tableMVUSER.ASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MS {
                get {
                    return ((bool)(this[this.tableMVUSER.MSColumn]));
                }
                set {
                    this[this.tableMVUSER.MSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEFNOTE {
                get {
                    return ((string)(this[this.tableMVUSER.DEFNOTEColumn]));
                }
                set {
                    this[this.tableMVUSER.DEFNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LAST_PWD {
                get {
                    return ((global::System.DateTime)(this[this.tableMVUSER.LAST_PWDColumn]));
                }
                set {
                    this[this.tableMVUSER.LAST_PWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FM {
                get {
                    return ((bool)(this[this.tableMVUSER.FMColumn]));
                }
                set {
                    this[this.tableMVUSER.FMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PIN {
                get {
                    return ((string)(this[this.tableMVUSER.PINColumn]));
                }
                set {
                    this[this.tableMVUSER.PINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LAST_PIN {
                get {
                    return ((global::System.DateTime)(this[this.tableMVUSER.LAST_PINColumn]));
                }
                set {
                    this[this.tableMVUSER.LAST_PINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ASSIGNPIN {
                get {
                    return ((bool)(this[this.tableMVUSER.ASSIGNPINColumn]));
                }
                set {
                    this[this.tableMVUSER.ASSIGNPINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CID {
                get {
                    return ((bool)(this[this.tableMVUSER.CIDColumn]));
                }
                set {
                    this[this.tableMVUSER.CIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EXPANDNOTE {
                get {
                    return ((bool)(this[this.tableMVUSER.EXPANDNOTEColumn]));
                }
                set {
                    this[this.tableMVUSER.EXPANDNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACTIVITY {
                get {
                    return ((global::System.DateTime)(this[this.tableMVUSER.ACTIVITYColumn]));
                }
                set {
                    this[this.tableMVUSER.ACTIVITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DEL {
                get {
                    return ((bool)(this[this.tableMVUSER.DELColumn]));
                }
                set {
                    this[this.tableMVUSER.DELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RESIDENT {
                get {
                    return ((bool)(this[this.tableMVUSER.RESIDENTColumn]));
                }
                set {
                    this[this.tableMVUSER.RESIDENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MSR {
                get {
                    return ((bool)(this[this.tableMVUSER.MSRColumn]));
                }
                set {
                    this[this.tableMVUSER.MSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XREF {
                get {
                    return ((string)(this[this.tableMVUSER.XREFColumn]));
                }
                set {
                    this[this.tableMVUSER.XREFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AUDIT {
                get {
                    return ((bool)(this[this.tableMVUSER.AUDITColumn]));
                }
                set {
                    this[this.tableMVUSER.AUDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AUTOUSER {
                get {
                    return ((string)(this[this.tableMVUSER.AUTOUSERColumn]));
                }
                set {
                    this[this.tableMVUSER.AUTOUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool QSELREP {
                get {
                    return ((bool)(this[this.tableMVUSER.QSELREPColumn]));
                }
                set {
                    this[this.tableMVUSER.QSELREPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VR_USER {
                get {
                    return ((string)(this[this.tableMVUSER.VR_USERColumn]));
                }
                set {
                    this[this.tableMVUSER.VR_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MULTILOGIN {
                get {
                    return ((bool)(this[this.tableMVUSER.MULTILOGINColumn]));
                }
                set {
                    this[this.tableMVUSER.MULTILOGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XREFM {
                get {
                    return ((string)(this[this.tableMVUSER.XREFMColumn]));
                }
                set {
                    this[this.tableMVUSER.XREFMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORDER {
                get {
                    return ((int)(this[this.tableMVUSER.ORDERColumn]));
                }
                set {
                    this[this.tableMVUSER.ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MACC {
                get {
                    return ((bool)(this[this.tableMVUSER.MACCColumn]));
                }
                set {
                    this[this.tableMVUSER.MACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DRR {
                get {
                    return ((bool)(this[this.tableMVUSER.DRRColumn]));
                }
                set {
                    this[this.tableMVUSER.DRRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RPS {
                get {
                    return ((bool)(this[this.tableMVUSER.RPSColumn]));
                }
                set {
                    this[this.tableMVUSER.RPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPROFILE {
                get {
                    return ((string)(this[this.tableMVUSER.RPROFILEColumn]));
                }
                set {
                    this[this.tableMVUSER.RPROFILEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DELS {
                get {
                    return ((bool)(this[this.tableMVUSER.DELSColumn]));
                }
                set {
                    this[this.tableMVUSER.DELSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NPI {
                get {
                    return ((string)(this[this.tableMVUSER.NPIColumn]));
                }
                set {
                    this[this.tableMVUSER.NPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VFC {
                get {
                    return ((bool)(this[this.tableMVUSER.VFCColumn]));
                }
                set {
                    this[this.tableMVUSER.VFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSUSERID {
                get {
                    return ((string)(this[this.tableMVUSER.PSUSERIDColumn]));
                }
                set {
                    this[this.tableMVUSER.PSUSERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSPASSWORD {
                get {
                    return ((string)(this[this.tableMVUSER.PSPASSWORDColumn]));
                }
                set {
                    this[this.tableMVUSER.PSPASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUSERID {
                get {
                    return ((string)(this[this.tableMVUSER.HUSERIDColumn]));
                }
                set {
                    this[this.tableMVUSER.HUSERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HPASSWORD {
                get {
                    return ((string)(this[this.tableMVUSER.HPASSWORDColumn]));
                }
                set {
                    this[this.tableMVUSER.HPASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID2 {
                get {
                    return ((string)(this[this.tableMVUSER.ID2Column]));
                }
                set {
                    this[this.tableMVUSER.ID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SA {
                get {
                    return ((bool)(this[this.tableMVUSER.SAColumn]));
                }
                set {
                    this[this.tableMVUSER.SAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PNS {
                get {
                    return ((bool)(this[this.tableMVUSER.PNSColumn]));
                }
                set {
                    this[this.tableMVUSER.PNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MNM {
                get {
                    return ((bool)(this[this.tableMVUSER.MNMColumn]));
                }
                set {
                    this[this.tableMVUSER.MNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EMER_ONLY {
                get {
                    return ((bool)(this[this.tableMVUSER.EMER_ONLYColumn]));
                }
                set {
                    this[this.tableMVUSER.EMER_ONLYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PATHRAD {
                get {
                    return ((bool)(this[this.tableMVUSER.PATHRADColumn]));
                }
                set {
                    this[this.tableMVUSER.PATHRADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RADPEER_ID {
                get {
                    return ((string)(this[this.tableMVUSER.RADPEER_IDColumn]));
                }
                set {
                    this[this.tableMVUSER.RADPEER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DELWL {
                get {
                    return ((bool)(this[this.tableMVUSER.DELWLColumn]));
                }
                set {
                    this[this.tableMVUSER.DELWLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NAVUSER {
                get {
                    return ((bool)(this[this.tableMVUSER.NAVUSERColumn]));
                }
                set {
                    this[this.tableMVUSER.NAVUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAVPERM {
                get {
                    return ((string)(this[this.tableMVUSER.NAVPERMColumn]));
                }
                set {
                    this[this.tableMVUSER.NAVPERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NAVASSIGN {
                get {
                    return ((bool)(this[this.tableMVUSER.NAVASSIGNColumn]));
                }
                set {
                    this[this.tableMVUSER.NAVASSIGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CME_GROUP {
                get {
                    return ((string)(this[this.tableMVUSER.CME_GROUPColumn]));
                }
                set {
                    this[this.tableMVUSER.CME_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CMERENEW {
                get {
                    return ((global::System.DateTime)(this[this.tableMVUSER.CMERENEWColumn]));
                }
                set {
                    this[this.tableMVUSER.CMERENEWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool INVLOGIN {
                get {
                    return ((bool)(this[this.tableMVUSER.INVLOGINColumn]));
                }
                set {
                    this[this.tableMVUSER.INVLOGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EHRSTAGE {
                get {
                    return ((string)(this[this.tableMVUSER.EHRSTAGEColumn]));
                }
                set {
                    this[this.tableMVUSER.EHRSTAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MFU {
                get {
                    return ((bool)(this[this.tableMVUSER.MFUColumn]));
                }
                set {
                    this[this.tableMVUSER.MFUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HRIS {
                get {
                    return ((bool)(this[this.tableMVUSER.HRISColumn]));
                }
                set {
                    this[this.tableMVUSER.HRISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool P_FILEMENU {
                get {
                    return ((bool)(this[this.tableMVUSER.P_FILEMENUColumn]));
                }
                set {
                    this[this.tableMVUSER.P_FILEMENUColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PREFRowChangeEvent : global::System.EventArgs {
            
            private PREFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFRowChangeEvent(PREFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PREFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MVUSERRowChangeEvent : global::System.EventArgs {
            
            private MVUSERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERRowChangeEvent(MVUSERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MVUSERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MVTools.MVDBTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PREFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PREFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PREF";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("USER", "USER");
            tableMapping.ColumnMappings.Add("DETAILS", "DETAILS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [PREF] ([ID], [USER], [DETAILS]) VALUES (@ID, @USER, @DETAILS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DETAILS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DETAILS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MVDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID,[USER],DETAILS \r\nFROM PREF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ID,[USER],DETAILS \r\nFROM PREF\r\nWHERE (ID LIKE RTRIM(LTRIM(@ID)) + \'%\')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE PREF\r\nSET [USER] = @User, DETAILS = @Details\r\nWHERE ID = @ID AND [USER] = " +
                "@User";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User", global::System.Data.SqlDbType.Char, 8, global::System.Data.ParameterDirection.Input, 0, 0, "USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Details", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "DETAILS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MVDB.PREFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MVDB.PREFDataTable GetPrefs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MVDB.PREFDataTable dataTable = new MVDB.PREFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MVDB.PREFDataTable dataTable, string ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MVDB.PREFDataTable GetPrefByID(string ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ID));
            }
            MVDB.PREFDataTable dataTable = new MVDB.PREFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MVDB.PREFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MVDB dataSet) {
            return this.Adapter.Update(dataSet, "PREF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID, string USER, string DETAILS) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((USER == null)) {
                throw new global::System.ArgumentNullException("USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER));
            }
            if ((DETAILS == null)) {
                throw new global::System.ArgumentNullException("DETAILS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DETAILS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePref(string User, string Details, string ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((User == null)) {
                throw new global::System.ArgumentNullException("User");
            }
            else {
                command.Parameters[0].Value = ((string)(User));
            }
            if ((Details == null)) {
                throw new global::System.ArgumentNullException("Details");
            }
            else {
                command.Parameters[1].Value = ((string)(Details));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                command.Parameters[2].Value = ((string)(ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MVUSERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MVUSERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MVUSER";
            tableMapping.ColumnMappings.Add("LOGGED", "LOGGED");
            tableMapping.ColumnMappings.Add("LL_DATE", "LL_DATE");
            tableMapping.ColumnMappings.Add("LL_TIME", "LL_TIME");
            tableMapping.ColumnMappings.Add("INIT", "INIT");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("LNAME", "LNAME");
            tableMapping.ColumnMappings.Add("FNAME", "FNAME");
            tableMapping.ColumnMappings.Add("ACCESS", "ACCESS");
            tableMapping.ColumnMappings.Add("STREET", "STREET");
            tableMapping.ColumnMappings.Add("CITY", "CITY");
            tableMapping.ColumnMappings.Add("ZIP", "ZIP");
            tableMapping.ColumnMappings.Add("PHONE", "PHONE");
            tableMapping.ColumnMappings.Add("STATE", "STATE");
            tableMapping.ColumnMappings.Add("UIS", "UIS");
            tableMapping.ColumnMappings.Add("PIS", "PIS");
            tableMapping.ColumnMappings.Add("FIS", "FIS");
            tableMapping.ColumnMappings.Add("HIS", "HIS");
            tableMapping.ColumnMappings.Add("REP", "REP");
            tableMapping.ColumnMappings.Add("LET", "LET");
            tableMapping.ColumnMappings.Add("SUU", "SUU");
            tableMapping.ColumnMappings.Add("MF", "MF");
            tableMapping.ColumnMappings.Add("SIS", "SIS");
            tableMapping.ColumnMappings.Add("SOS", "SOS");
            tableMapping.ColumnMappings.Add("EXPERT", "EXPERT");
            tableMapping.ColumnMappings.Add("PFS", "PFS");
            tableMapping.ColumnMappings.Add("MACROS", "MACROS");
            tableMapping.ColumnMappings.Add("KEY", "KEY");
            tableMapping.ColumnMappings.Add("SSN", "SSN");
            tableMapping.ColumnMappings.Add("BARENTRY", "BARENTRY");
            tableMapping.ColumnMappings.Add("TUSERS", "TUSERS");
            tableMapping.ColumnMappings.Add("INITIALS", "INITIALS");
            tableMapping.ColumnMappings.Add("RADUSER", "RADUSER");
            tableMapping.ColumnMappings.Add("TECHUSER", "TECHUSER");
            tableMapping.ColumnMappings.Add("ACTIVE", "ACTIVE");
            tableMapping.ColumnMappings.Add("FNOTES", "FNOTES");
            tableMapping.ColumnMappings.Add("QA", "QA");
            tableMapping.ColumnMappings.Add("REMOTE", "REMOTE");
            tableMapping.ColumnMappings.Add("GROUP", "GROUP");
            tableMapping.ColumnMappings.Add("NIS", "NIS");
            tableMapping.ColumnMappings.Add("STYPE", "STYPE");
            tableMapping.ColumnMappings.Add("DOC", "DOC");
            tableMapping.ColumnMappings.Add("AS", "AS");
            tableMapping.ColumnMappings.Add("MS", "MS");
            tableMapping.ColumnMappings.Add("DEFNOTE", "DEFNOTE");
            tableMapping.ColumnMappings.Add("LAST_PWD", "LAST_PWD");
            tableMapping.ColumnMappings.Add("FM", "FM");
            tableMapping.ColumnMappings.Add("PIN", "PIN");
            tableMapping.ColumnMappings.Add("LAST_PIN", "LAST_PIN");
            tableMapping.ColumnMappings.Add("ASSIGNPIN", "ASSIGNPIN");
            tableMapping.ColumnMappings.Add("CID", "CID");
            tableMapping.ColumnMappings.Add("EXPANDNOTE", "EXPANDNOTE");
            tableMapping.ColumnMappings.Add("ACTIVITY", "ACTIVITY");
            tableMapping.ColumnMappings.Add("DEL", "DEL");
            tableMapping.ColumnMappings.Add("RESIDENT", "RESIDENT");
            tableMapping.ColumnMappings.Add("MSR", "MSR");
            tableMapping.ColumnMappings.Add("XREF", "XREF");
            tableMapping.ColumnMappings.Add("AUDIT", "AUDIT");
            tableMapping.ColumnMappings.Add("AUTOUSER", "AUTOUSER");
            tableMapping.ColumnMappings.Add("QSELREP", "QSELREP");
            tableMapping.ColumnMappings.Add("VR_USER", "VR_USER");
            tableMapping.ColumnMappings.Add("MULTILOGIN", "MULTILOGIN");
            tableMapping.ColumnMappings.Add("XREFM", "XREFM");
            tableMapping.ColumnMappings.Add("ORDER", "ORDER");
            tableMapping.ColumnMappings.Add("MACC", "MACC");
            tableMapping.ColumnMappings.Add("DRR", "DRR");
            tableMapping.ColumnMappings.Add("RPS", "RPS");
            tableMapping.ColumnMappings.Add("RPROFILE", "RPROFILE");
            tableMapping.ColumnMappings.Add("DELS", "DELS");
            tableMapping.ColumnMappings.Add("NPI", "NPI");
            tableMapping.ColumnMappings.Add("VFC", "VFC");
            tableMapping.ColumnMappings.Add("PSUSERID", "PSUSERID");
            tableMapping.ColumnMappings.Add("PSPASSWORD", "PSPASSWORD");
            tableMapping.ColumnMappings.Add("HUSERID", "HUSERID");
            tableMapping.ColumnMappings.Add("HPASSWORD", "HPASSWORD");
            tableMapping.ColumnMappings.Add("ID2", "ID2");
            tableMapping.ColumnMappings.Add("SA", "SA");
            tableMapping.ColumnMappings.Add("PNS", "PNS");
            tableMapping.ColumnMappings.Add("MNM", "MNM");
            tableMapping.ColumnMappings.Add("EMER_ONLY", "EMER_ONLY");
            tableMapping.ColumnMappings.Add("PATHRAD", "PATHRAD");
            tableMapping.ColumnMappings.Add("RADPEER_ID", "RADPEER_ID");
            tableMapping.ColumnMappings.Add("DELWL", "DELWL");
            tableMapping.ColumnMappings.Add("NAVUSER", "NAVUSER");
            tableMapping.ColumnMappings.Add("NAVPERM", "NAVPERM");
            tableMapping.ColumnMappings.Add("NAVASSIGN", "NAVASSIGN");
            tableMapping.ColumnMappings.Add("CME_GROUP", "CME_GROUP");
            tableMapping.ColumnMappings.Add("CMERENEW", "CMERENEW");
            tableMapping.ColumnMappings.Add("INVLOGIN", "INVLOGIN");
            tableMapping.ColumnMappings.Add("EHRSTAGE", "EHRSTAGE");
            tableMapping.ColumnMappings.Add("MFU", "MFU");
            tableMapping.ColumnMappings.Add("HRIS", "HRIS");
            tableMapping.ColumnMappings.Add("P_FILEMENU", "P_FILEMENU");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MVUSER] ([LOGGED], [LL_DATE], [LL_TIME], [INIT], [CODE], [LNAM" +
                "E], [FNAME], [ACCESS], [STREET], [CITY], [ZIP], [PHONE], [STATE], [UIS], [PIS], " +
                "[FIS], [HIS], [REP], [LET], [SUU], [MF], [SIS], [SOS], [EXPERT], [PFS], [MACROS]" +
                ", [KEY], [SSN], [BARENTRY], [TUSERS], [INITIALS], [RADUSER], [TECHUSER], [ACTIVE" +
                "], [FNOTES], [QA], [REMOTE], [GROUP], [NIS], [STYPE], [DOC], [AS], [MS], [DEFNOT" +
                "E], [LAST_PWD], [FM], [PIN], [LAST_PIN], [ASSIGNPIN], [CID], [EXPANDNOTE], [ACTI" +
                "VITY], [DEL], [RESIDENT], [MSR], [XREF], [AUDIT], [AUTOUSER], [QSELREP], [VR_USE" +
                "R], [MULTILOGIN], [XREFM], [ORDER], [MACC], [DRR], [RPS], [RPROFILE], [DELS], [N" +
                "PI], [VFC], [PSUSERID], [PSPASSWORD], [HUSERID], [HPASSWORD], [ID2], [SA], [PNS]" +
                ", [MNM], [EMER_ONLY], [PATHRAD], [RADPEER_ID], [DELWL], [NAVUSER], [NAVPERM], [N" +
                "AVASSIGN], [CME_GROUP], [CMERENEW], [INVLOGIN], [EHRSTAGE], [MFU], [HRIS], [P_FI" +
                "LEMENU]) VALUES (@LOGGED, @LL_DATE, @LL_TIME, @INIT, @CODE, @LNAME, @FNAME, @ACC" +
                "ESS, @STREET, @CITY, @ZIP, @PHONE, @STATE, @UIS, @PIS, @FIS, @HIS, @REP, @LET, @" +
                "SUU, @MF, @SIS, @SOS, @EXPERT, @PFS, @MACROS, @KEY, @SSN, @BARENTRY, @TUSERS, @I" +
                "NITIALS, @RADUSER, @TECHUSER, @ACTIVE, @FNOTES, @QA, @REMOTE, @GROUP, @NIS, @STY" +
                "PE, @DOC, @AS, @MS, @DEFNOTE, @LAST_PWD, @FM, @PIN, @LAST_PIN, @ASSIGNPIN, @CID," +
                " @EXPANDNOTE, @ACTIVITY, @DEL, @RESIDENT, @MSR, @XREF, @AUDIT, @AUTOUSER, @QSELR" +
                "EP, @VR_USER, @MULTILOGIN, @XREFM, @ORDER, @MACC, @DRR, @RPS, @RPROFILE, @DELS, " +
                "@NPI, @VFC, @PSUSERID, @PSPASSWORD, @HUSERID, @HPASSWORD, @ID2, @SA, @PNS, @MNM," +
                " @EMER_ONLY, @PATHRAD, @RADPEER_ID, @DELWL, @NAVUSER, @NAVPERM, @NAVASSIGN, @CME" +
                "_GROUP, @CMERENEW, @INVLOGIN, @EHRSTAGE, @MFU, @HRIS, @P_FILEMENU)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGGED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGGED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LL_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LL_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LL_TIME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INIT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCESS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STREET", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STREET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CITY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZIP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUU", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPERT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPERT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PFS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACROS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACROS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BARENTRY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BARENTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUSERS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUSERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INITIALS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INITIALS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RADUSER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RADUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TECHUSER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TECHUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNOTES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNOTES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMOTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GROUP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFNOTE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFNOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_PWD", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_PWD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PIN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_PIN", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_PIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASSIGNPIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASSIGNPIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CID", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPANDNOTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPANDNOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVITY", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RESIDENT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RESIDENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MSR", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MSR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@XREF", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XREF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUDIT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOUSER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QSELREP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QSELREP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VR_USER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VR_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MULTILOGIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MULTILOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@XREFM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XREFM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRR", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DRR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPROFILE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPROFILE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NPI", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VFC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VFC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSUSERID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSUSERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSPASSWORD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSPASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HUSERID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HUSERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HPASSWORD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HPASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MNM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MNM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMER_ONLY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMER_ONLY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATHRAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATHRAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RADPEER_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RADPEER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELWL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELWL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAVUSER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAVPERM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVPERM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAVASSIGN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVASSIGN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CME_GROUP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CME_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMERENEW", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMERENEW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVLOGIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVLOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EHRSTAGE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EHRSTAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MFU", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MFU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRIS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HRIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_FILEMENU", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_FILEMENU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MVDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT LOGGED, LL_DATE, LL_TIME, INIT, CODE, LNAME, FNAME, ACCESS, STREET, CITY, ZIP, PHONE, STATE, UIS, PIS, FIS, HIS, REP, LET, SUU, MF, SIS, SOS, EXPERT, PFS, MACROS, [KEY], SSN, BARENTRY, TUSERS, INITIALS, RADUSER, TECHUSER, ACTIVE, FNOTES, QA, REMOTE, [GROUP], NIS, STYPE, DOC, [AS], MS, DEFNOTE, LAST_PWD, FM, PIN, LAST_PIN, ASSIGNPIN, CID, EXPANDNOTE, ACTIVITY, DEL, RESIDENT, MSR, XREF, AUDIT, AUTOUSER, QSELREP, VR_USER, MULTILOGIN, XREFM, [ORDER], MACC, DRR, RPS, RPROFILE, DELS, NPI, VFC, PSUSERID, PSPASSWORD, HUSERID, HPASSWORD, ID2, SA, PNS, MNM, EMER_ONLY, PATHRAD, RADPEER_ID, DELWL, NAVUSER, NAVPERM, NAVASSIGN, CME_GROUP, CMERENEW, INVLOGIN, EHRSTAGE, MFU, HRIS, P_FILEMENU FROM dbo.MVUSER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT LOGGED, LL_DATE, LL_TIME, INIT, CODE, LNAME, FNAME, ACCESS, STREET, CITY, ZIP, PHONE, STATE, UIS, PIS, FIS, HIS, REP, LET, SUU, MF, SIS, SOS, EXPERT, PFS, MACROS, [KEY], SSN, BARENTRY, TUSERS, INITIALS, RADUSER, TECHUSER, ACTIVE, FNOTES, QA, REMOTE, [GROUP], NIS, STYPE, DOC, [AS], MS, DEFNOTE, LAST_PWD, FM, PIN, LAST_PIN, ASSIGNPIN, CID, EXPANDNOTE, ACTIVITY, DEL, RESIDENT, MSR, XREF, AUDIT, AUTOUSER, QSELREP, VR_USER, MULTILOGIN, XREFM, [ORDER], MACC, DRR, RPS, RPROFILE, DELS, NPI, VFC, PSUSERID, PSPASSWORD, HUSERID, HPASSWORD, ID2, SA, PNS, MNM, EMER_ONLY, PATHRAD, RADPEER_ID, DELWL, NAVUSER, NAVPERM, NAVASSIGN, CME_GROUP, CMERENEW, INVLOGIN, EHRSTAGE, MFU, HRIS, P_FILEMENU FROM dbo.MVUSER
WHERE INIT = @INIT";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INIT", global::System.Data.SqlDbType.Char, 8, global::System.Data.ParameterDirection.Input, 0, 0, "INIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MVDB.MVUSERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MVDB.MVUSERDataTable GetUsers() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MVDB.MVUSERDataTable dataTable = new MVDB.MVUSERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MVDB.MVUSERDataTable dataTable, string INIT) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((INIT == null)) {
                throw new global::System.ArgumentNullException("INIT");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(INIT));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MVDB.MVUSERDataTable GetUserByInit(string INIT) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((INIT == null)) {
                throw new global::System.ArgumentNullException("INIT");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(INIT));
            }
            MVDB.MVUSERDataTable dataTable = new MVDB.MVUSERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MVDB.MVUSERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MVDB dataSet) {
            return this.Adapter.Update(dataSet, "MVUSER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    bool LOGGED, 
                    System.DateTime LL_DATE, 
                    string LL_TIME, 
                    string INIT, 
                    string CODE, 
                    string LNAME, 
                    string FNAME, 
                    string ACCESS, 
                    string STREET, 
                    string CITY, 
                    string ZIP, 
                    string PHONE, 
                    string STATE, 
                    bool UIS, 
                    bool PIS, 
                    bool FIS, 
                    bool HIS, 
                    bool REP, 
                    bool LET, 
                    bool SUU, 
                    bool MF, 
                    bool SIS, 
                    bool SOS, 
                    bool EXPERT, 
                    bool PFS, 
                    string MACROS, 
                    string KEY, 
                    string SSN, 
                    bool BARENTRY, 
                    string TUSERS, 
                    string INITIALS, 
                    bool RADUSER, 
                    bool TECHUSER, 
                    bool ACTIVE, 
                    string FNOTES, 
                    bool QA, 
                    bool REMOTE, 
                    string GROUP, 
                    bool NIS, 
                    string STYPE, 
                    string DOC, 
                    bool AS, 
                    bool MS, 
                    string DEFNOTE, 
                    System.DateTime LAST_PWD, 
                    bool FM, 
                    string PIN, 
                    System.DateTime LAST_PIN, 
                    bool ASSIGNPIN, 
                    bool CID, 
                    bool EXPANDNOTE, 
                    System.DateTime ACTIVITY, 
                    bool DEL, 
                    bool RESIDENT, 
                    bool MSR, 
                    string XREF, 
                    bool AUDIT, 
                    string AUTOUSER, 
                    bool QSELREP, 
                    string VR_USER, 
                    bool MULTILOGIN, 
                    string XREFM, 
                    int ORDER, 
                    bool MACC, 
                    bool DRR, 
                    bool RPS, 
                    string RPROFILE, 
                    bool DELS, 
                    string NPI, 
                    bool VFC, 
                    string PSUSERID, 
                    string PSPASSWORD, 
                    string HUSERID, 
                    string HPASSWORD, 
                    string ID2, 
                    bool SA, 
                    bool PNS, 
                    bool MNM, 
                    bool EMER_ONLY, 
                    bool PATHRAD, 
                    string RADPEER_ID, 
                    bool DELWL, 
                    bool NAVUSER, 
                    string NAVPERM, 
                    bool NAVASSIGN, 
                    string CME_GROUP, 
                    System.DateTime CMERENEW, 
                    bool INVLOGIN, 
                    string EHRSTAGE, 
                    bool MFU, 
                    bool HRIS, 
                    bool P_FILEMENU) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((bool)(LOGGED));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(LL_DATE));
            if ((LL_TIME == null)) {
                throw new global::System.ArgumentNullException("LL_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LL_TIME));
            }
            if ((INIT == null)) {
                throw new global::System.ArgumentNullException("INIT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(INIT));
            }
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CODE));
            }
            if ((LNAME == null)) {
                throw new global::System.ArgumentNullException("LNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LNAME));
            }
            if ((FNAME == null)) {
                throw new global::System.ArgumentNullException("FNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FNAME));
            }
            if ((ACCESS == null)) {
                throw new global::System.ArgumentNullException("ACCESS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ACCESS));
            }
            if ((STREET == null)) {
                throw new global::System.ArgumentNullException("STREET");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(STREET));
            }
            if ((CITY == null)) {
                throw new global::System.ArgumentNullException("CITY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CITY));
            }
            if ((ZIP == null)) {
                throw new global::System.ArgumentNullException("ZIP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ZIP));
            }
            if ((PHONE == null)) {
                throw new global::System.ArgumentNullException("PHONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(PHONE));
            }
            if ((STATE == null)) {
                throw new global::System.ArgumentNullException("STATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(STATE));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(UIS));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(PIS));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(FIS));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(HIS));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(REP));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(LET));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(SUU));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(MF));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(SIS));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(SOS));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(EXPERT));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(PFS));
            if ((MACROS == null)) {
                throw new global::System.ArgumentNullException("MACROS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(MACROS));
            }
            if ((KEY == null)) {
                throw new global::System.ArgumentNullException("KEY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(KEY));
            }
            if ((SSN == null)) {
                throw new global::System.ArgumentNullException("SSN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SSN));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(BARENTRY));
            if ((TUSERS == null)) {
                throw new global::System.ArgumentNullException("TUSERS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(TUSERS));
            }
            if ((INITIALS == null)) {
                throw new global::System.ArgumentNullException("INITIALS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(INITIALS));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(RADUSER));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(TECHUSER));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(ACTIVE));
            if ((FNOTES == null)) {
                throw new global::System.ArgumentNullException("FNOTES");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(FNOTES));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(QA));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(REMOTE));
            if ((GROUP == null)) {
                throw new global::System.ArgumentNullException("GROUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(GROUP));
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(NIS));
            if ((STYPE == null)) {
                throw new global::System.ArgumentNullException("STYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(STYPE));
            }
            if ((DOC == null)) {
                throw new global::System.ArgumentNullException("DOC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(DOC));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(AS));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(MS));
            if ((DEFNOTE == null)) {
                throw new global::System.ArgumentNullException("DEFNOTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(DEFNOTE));
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(LAST_PWD));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(FM));
            if ((PIN == null)) {
                throw new global::System.ArgumentNullException("PIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(PIN));
            }
            this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(LAST_PIN));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(ASSIGNPIN));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(CID));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(EXPANDNOTE));
            this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(ACTIVITY));
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(DEL));
            this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(RESIDENT));
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(MSR));
            if ((XREF == null)) {
                throw new global::System.ArgumentNullException("XREF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(XREF));
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(AUDIT));
            if ((AUTOUSER == null)) {
                throw new global::System.ArgumentNullException("AUTOUSER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(AUTOUSER));
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(QSELREP));
            if ((VR_USER == null)) {
                throw new global::System.ArgumentNullException("VR_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(VR_USER));
            }
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(MULTILOGIN));
            if ((XREFM == null)) {
                throw new global::System.ArgumentNullException("XREFM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(XREFM));
            }
            this.Adapter.InsertCommand.Parameters[62].Value = ((int)(ORDER));
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(MACC));
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(DRR));
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(RPS));
            if ((RPROFILE == null)) {
                throw new global::System.ArgumentNullException("RPROFILE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(RPROFILE));
            }
            this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(DELS));
            if ((NPI == null)) {
                throw new global::System.ArgumentNullException("NPI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(NPI));
            }
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(VFC));
            if ((PSUSERID == null)) {
                throw new global::System.ArgumentNullException("PSUSERID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(PSUSERID));
            }
            if ((PSPASSWORD == null)) {
                throw new global::System.ArgumentNullException("PSPASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(PSPASSWORD));
            }
            if ((HUSERID == null)) {
                throw new global::System.ArgumentNullException("HUSERID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(HUSERID));
            }
            if ((HPASSWORD == null)) {
                throw new global::System.ArgumentNullException("HPASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(HPASSWORD));
            }
            if ((ID2 == null)) {
                throw new global::System.ArgumentNullException("ID2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(ID2));
            }
            this.Adapter.InsertCommand.Parameters[75].Value = ((bool)(SA));
            this.Adapter.InsertCommand.Parameters[76].Value = ((bool)(PNS));
            this.Adapter.InsertCommand.Parameters[77].Value = ((bool)(MNM));
            this.Adapter.InsertCommand.Parameters[78].Value = ((bool)(EMER_ONLY));
            this.Adapter.InsertCommand.Parameters[79].Value = ((bool)(PATHRAD));
            if ((RADPEER_ID == null)) {
                throw new global::System.ArgumentNullException("RADPEER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(RADPEER_ID));
            }
            this.Adapter.InsertCommand.Parameters[81].Value = ((bool)(DELWL));
            this.Adapter.InsertCommand.Parameters[82].Value = ((bool)(NAVUSER));
            if ((NAVPERM == null)) {
                throw new global::System.ArgumentNullException("NAVPERM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(NAVPERM));
            }
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(NAVASSIGN));
            if ((CME_GROUP == null)) {
                throw new global::System.ArgumentNullException("CME_GROUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = ((string)(CME_GROUP));
            }
            this.Adapter.InsertCommand.Parameters[86].Value = ((System.DateTime)(CMERENEW));
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(INVLOGIN));
            if ((EHRSTAGE == null)) {
                throw new global::System.ArgumentNullException("EHRSTAGE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(EHRSTAGE));
            }
            this.Adapter.InsertCommand.Parameters[89].Value = ((bool)(MFU));
            this.Adapter.InsertCommand.Parameters[90].Value = ((bool)(HRIS));
            this.Adapter.InsertCommand.Parameters[91].Value = ((bool)(P_FILEMENU));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PREFTableAdapter _pREFTableAdapter;
        
        private MVUSERTableAdapter _mVUSERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PREFTableAdapter PREFTableAdapter {
            get {
                return this._pREFTableAdapter;
            }
            set {
                this._pREFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MVUSERTableAdapter MVUSERTableAdapter {
            get {
                return this._mVUSERTableAdapter;
            }
            set {
                this._mVUSERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pREFTableAdapter != null) 
                            && (this._pREFTableAdapter.Connection != null))) {
                    return this._pREFTableAdapter.Connection;
                }
                if (((this._mVUSERTableAdapter != null) 
                            && (this._mVUSERTableAdapter.Connection != null))) {
                    return this._mVUSERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pREFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mVUSERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(MVDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pREFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PREF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pREFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mVUSERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MVUSER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mVUSERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(MVDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pREFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PREF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pREFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mVUSERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MVUSER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mVUSERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(MVDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mVUSERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MVUSER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mVUSERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pREFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PREF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pREFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(MVDB dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pREFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pREFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mVUSERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mVUSERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pREFTableAdapter != null)) {
                    revertConnections.Add(this._pREFTableAdapter, this._pREFTableAdapter.Connection);
                    this._pREFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pREFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pREFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pREFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pREFTableAdapter.Adapter);
                    }
                }
                if ((this._mVUSERTableAdapter != null)) {
                    revertConnections.Add(this._mVUSERTableAdapter, this._mVUSERTableAdapter.Connection);
                    this._mVUSERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mVUSERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mVUSERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mVUSERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mVUSERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pREFTableAdapter != null)) {
                    this._pREFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pREFTableAdapter]));
                    this._pREFTableAdapter.Transaction = null;
                }
                if ((this._mVUSERTableAdapter != null)) {
                    this._mVUSERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mVUSERTableAdapter]));
                    this._mVUSERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591